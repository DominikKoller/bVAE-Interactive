{"id":"app.ts","dependencies":[{"name":"/Users/dominikkoller/Documents/GitHub/autoencoder_tests/package.json","includedInParent":true,"mtime":1643466985826},{"name":"onnxruntime-web","loc":{"line":39,"column":18},"parent":"/Users/dominikkoller/Documents/GitHub/autoencoder_tests/app.ts","resolved":"/Users/dominikkoller/Documents/GitHub/autoencoder_tests/node_modules/onnxruntime-web/dist/ort-web.min.js"}],"generated":{"js":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar ort = require('onnxruntime-web'); // use an async context to call onnxruntime functions.\n\n\nfunction main() {\n  return __awaiter(this, void 0, void 0, function () {\n    var session, dataA, dataB, tensorA, tensorB, feeds, results, dataC, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , ort.InferenceSession.create('./model.onnx')];\n\n        case 1:\n          session = _a.sent();\n          dataA = Float32Array.from([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n          dataB = Float32Array.from([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]);\n          tensorA = new ort.Tensor('float32', dataA, [3, 4]);\n          tensorB = new ort.Tensor('float32', dataB, [4, 3]);\n          feeds = {\n            a: tensorA,\n            b: tensorB\n          };\n          return [4\n          /*yield*/\n          , session.run(feeds)];\n\n        case 2:\n          results = _a.sent();\n          dataC = results.c.data;\n          document.write(\"data of result tensor 'c': \".concat(dataC));\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          e_1 = _a.sent();\n          document.write(\"failed to inference ONNX model: \".concat(e_1, \".\"));\n          return [3\n          /*break*/\n          , 4];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nmain();"},"sourceMaps":{"js":{"mappings":[{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"app.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"app.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":146,"column":0}},{"source":"app.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":146,"column":4}},{"source":"app.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":146,"column":7}},{"source":"app.ts","name":null,"original":{"line":4,"column":12},"generated":{"line":146,"column":10}},{"source":"app.ts","name":null,"original":{"line":4,"column":19},"generated":{"line":146,"column":17}},{"source":"app.ts","name":null,"original":{"line":4,"column":20},"generated":{"line":146,"column":18}},{"source":"app.ts","name":null,"original":{"line":4,"column":19},"generated":{"line":146,"column":35}},{"source":"app.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":146,"column":36}},{"source":"app.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":146,"column":38}},{"source":"app.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":149,"column":0}},{"source":"app.ts","name":null,"original":{"line":7,"column":15},"generated":{"line":149,"column":9}},{"source":"app.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":149,"column":13}},{"source":"app.ts","name":null,"original":{"line":7,"column":19},"generated":{"line":149,"column":16}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":157,"column":0}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":157,"column":17}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":157,"column":18}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":158,"column":0}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":159,"column":0}},{"source":"app.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":159,"column":12}},{"source":"app.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":159,"column":15}},{"source":"app.ts","name":null,"original":{"line":14,"column":34},"generated":{"line":159,"column":16}},{"source":"app.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":159,"column":32}},{"source":"app.ts","name":null,"original":{"line":14,"column":51},"generated":{"line":159,"column":33}},{"source":"app.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":159,"column":39}},{"source":"app.ts","name":null,"original":{"line":14,"column":58},"generated":{"line":159,"column":40}},{"source":"app.ts","name":null,"original":{"line":14,"column":30},"generated":{"line":159,"column":54}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":159,"column":55}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":159,"column":56}},{"source":"app.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":162,"column":0}},{"source":"app.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":162,"column":10}},{"source":"app.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":162,"column":17}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":162,"column":20}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":162,"column":22}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":162,"column":23}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":162,"column":27}},{"source":"app.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":162,"column":29}},{"source":"app.ts","name":null,"original":{"line":17,"column":14},"generated":{"line":163,"column":0}},{"source":"app.ts","name":null,"original":{"line":17,"column":14},"generated":{"line":163,"column":10}},{"source":"app.ts","name":null,"original":{"line":17,"column":19},"generated":{"line":163,"column":15}},{"source":"app.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":163,"column":18}},{"source":"app.ts","name":null,"original":{"line":17,"column":34},"generated":{"line":163,"column":30}},{"source":"app.ts","name":null,"original":{"line":17,"column":35},"generated":{"line":163,"column":31}},{"source":"app.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":163,"column":35}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":36}},{"source":"app.ts","name":null,"original":{"line":17,"column":41},"generated":{"line":163,"column":37}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":38}},{"source":"app.ts","name":null,"original":{"line":17,"column":44},"generated":{"line":163,"column":40}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":41}},{"source":"app.ts","name":null,"original":{"line":17,"column":47},"generated":{"line":163,"column":43}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":44}},{"source":"app.ts","name":null,"original":{"line":17,"column":50},"generated":{"line":163,"column":46}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":47}},{"source":"app.ts","name":null,"original":{"line":17,"column":53},"generated":{"line":163,"column":49}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":50}},{"source":"app.ts","name":null,"original":{"line":17,"column":56},"generated":{"line":163,"column":52}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":53}},{"source":"app.ts","name":null,"original":{"line":17,"column":59},"generated":{"line":163,"column":55}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":56}},{"source":"app.ts","name":null,"original":{"line":17,"column":62},"generated":{"line":163,"column":58}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":59}},{"source":"app.ts","name":null,"original":{"line":17,"column":65},"generated":{"line":163,"column":61}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":62}},{"source":"app.ts","name":null,"original":{"line":17,"column":68},"generated":{"line":163,"column":64}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":66}},{"source":"app.ts","name":null,"original":{"line":17,"column":72},"generated":{"line":163,"column":68}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":70}},{"source":"app.ts","name":null,"original":{"line":17,"column":76},"generated":{"line":163,"column":72}},{"source":"app.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":163,"column":74}},{"source":"app.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":163,"column":75}},{"source":"app.ts","name":null,"original":{"line":17,"column":14},"generated":{"line":163,"column":76}},{"source":"app.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":164,"column":0}},{"source":"app.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":164,"column":10}},{"source":"app.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":164,"column":15}},{"source":"app.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":164,"column":18}},{"source":"app.ts","name":null,"original":{"line":18,"column":34},"generated":{"line":164,"column":30}},{"source":"app.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":164,"column":31}},{"source":"app.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":164,"column":35}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":36}},{"source":"app.ts","name":null,"original":{"line":18,"column":41},"generated":{"line":164,"column":37}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":39}},{"source":"app.ts","name":null,"original":{"line":18,"column":45},"generated":{"line":164,"column":41}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":43}},{"source":"app.ts","name":null,"original":{"line":18,"column":49},"generated":{"line":164,"column":45}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":47}},{"source":"app.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":164,"column":49}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":51}},{"source":"app.ts","name":null,"original":{"line":18,"column":57},"generated":{"line":164,"column":53}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":55}},{"source":"app.ts","name":null,"original":{"line":18,"column":61},"generated":{"line":164,"column":57}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":59}},{"source":"app.ts","name":null,"original":{"line":18,"column":65},"generated":{"line":164,"column":61}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":63}},{"source":"app.ts","name":null,"original":{"line":18,"column":69},"generated":{"line":164,"column":65}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":67}},{"source":"app.ts","name":null,"original":{"line":18,"column":73},"generated":{"line":164,"column":69}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":71}},{"source":"app.ts","name":null,"original":{"line":18,"column":77},"generated":{"line":164,"column":73}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":76}},{"source":"app.ts","name":null,"original":{"line":18,"column":82},"generated":{"line":164,"column":78}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":81}},{"source":"app.ts","name":null,"original":{"line":18,"column":87},"generated":{"line":164,"column":83}},{"source":"app.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":164,"column":86}},{"source":"app.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":164,"column":87}},{"source":"app.ts","name":null,"original":{"line":18,"column":14},"generated":{"line":164,"column":88}},{"source":"app.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":165,"column":0}},{"source":"app.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":165,"column":10}},{"source":"app.ts","name":null,"original":{"line":19,"column":21},"generated":{"line":165,"column":17}},{"source":"app.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":165,"column":20}},{"source":"app.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":165,"column":24}},{"source":"app.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":165,"column":27}},{"source":"app.ts","name":null,"original":{"line":19,"column":32},"generated":{"line":165,"column":28}},{"source":"app.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":165,"column":34}},{"source":"app.ts","name":null,"original":{"line":19,"column":39},"generated":{"line":165,"column":35}},{"source":"app.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":165,"column":44}},{"source":"app.ts","name":null,"original":{"line":19,"column":50},"generated":{"line":165,"column":46}},{"source":"app.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":165,"column":51}},{"source":"app.ts","name":null,"original":{"line":19,"column":57},"generated":{"line":165,"column":53}},{"source":"app.ts","name":null,"original":{"line":19,"column":58},"generated":{"line":165,"column":54}},{"source":"app.ts","name":null,"original":{"line":19,"column":57},"generated":{"line":165,"column":55}},{"source":"app.ts","name":null,"original":{"line":19,"column":61},"generated":{"line":165,"column":57}},{"source":"app.ts","name":null,"original":{"line":19,"column":57},"generated":{"line":165,"column":58}},{"source":"app.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":165,"column":59}},{"source":"app.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":165,"column":60}},{"source":"app.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":166,"column":0}},{"source":"app.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":166,"column":10}},{"source":"app.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":166,"column":17}},{"source":"app.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":166,"column":20}},{"source":"app.ts","name":null,"original":{"line":20,"column":28},"generated":{"line":166,"column":24}},{"source":"app.ts","name":null,"original":{"line":20,"column":31},"generated":{"line":166,"column":27}},{"source":"app.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":166,"column":28}},{"source":"app.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":166,"column":34}},{"source":"app.ts","name":null,"original":{"line":20,"column":39},"generated":{"line":166,"column":35}},{"source":"app.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":166,"column":44}},{"source":"app.ts","name":null,"original":{"line":20,"column":50},"generated":{"line":166,"column":46}},{"source":"app.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":166,"column":51}},{"source":"app.ts","name":null,"original":{"line":20,"column":57},"generated":{"line":166,"column":53}},{"source":"app.ts","name":null,"original":{"line":20,"column":58},"generated":{"line":166,"column":54}},{"source":"app.ts","name":null,"original":{"line":20,"column":57},"generated":{"line":166,"column":55}},{"source":"app.ts","name":null,"original":{"line":20,"column":61},"generated":{"line":166,"column":57}},{"source":"app.ts","name":null,"original":{"line":20,"column":57},"generated":{"line":166,"column":58}},{"source":"app.ts","name":null,"original":{"line":20,"column":24},"generated":{"line":166,"column":59}},{"source":"app.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":166,"column":60}},{"source":"app.ts","name":null,"original":{"line":23,"column":14},"generated":{"line":167,"column":0}},{"source":"app.ts","name":null,"original":{"line":23,"column":14},"generated":{"line":167,"column":10}},{"source":"app.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":167,"column":15}},{"source":"app.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":167,"column":18}},{"source":"app.ts","name":null,"original":{"line":23,"column":24},"generated":{"line":168,"column":0}},{"source":"app.ts","name":null,"original":{"line":23,"column":24},"generated":{"line":168,"column":12}},{"source":"app.ts","name":null,"original":{"line":23,"column":25},"generated":{"line":168,"column":13}},{"source":"app.ts","name":null,"original":{"line":23,"column":27},"generated":{"line":168,"column":15}},{"source":"app.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":168,"column":22}},{"source":"app.ts","name":null,"original":{"line":23,"column":36},"generated":{"line":169,"column":0}},{"source":"app.ts","name":null,"original":{"line":23,"column":36},"generated":{"line":169,"column":12}},{"source":"app.ts","name":null,"original":{"line":23,"column":37},"generated":{"line":169,"column":13}},{"source":"app.ts","name":null,"original":{"line":23,"column":39},"generated":{"line":169,"column":15}},{"source":"app.ts","name":null,"original":{"line":23,"column":22},"generated":{"line":170,"column":0}},{"source":"app.ts","name":null,"original":{"line":23,"column":14},"generated":{"line":170,"column":11}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":171,"column":0}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":171,"column":17}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":171,"column":18}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":172,"column":0}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":173,"column":0}},{"source":"app.ts","name":null,"original":{"line":26,"column":30},"generated":{"line":173,"column":12}},{"source":"app.ts","name":null,"original":{"line":26,"column":37},"generated":{"line":173,"column":19}},{"source":"app.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":173,"column":20}},{"source":"app.ts","name":null,"original":{"line":26,"column":30},"generated":{"line":173,"column":23}},{"source":"app.ts","name":null,"original":{"line":26,"column":42},"generated":{"line":173,"column":24}},{"source":"app.ts","name":null,"original":{"line":26,"column":30},"generated":{"line":173,"column":29}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":173,"column":30}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":173,"column":31}},{"source":"app.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":176,"column":0}},{"source":"app.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":176,"column":10}},{"source":"app.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":176,"column":17}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":176,"column":20}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":176,"column":22}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":176,"column":23}},{"source":"app.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":176,"column":27}},{"source":"app.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":176,"column":29}},{"source":"app.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":177,"column":0}},{"source":"app.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":177,"column":10}},{"source":"app.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":177,"column":15}},{"source":"app.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":177,"column":18}},{"source":"app.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":177,"column":25}},{"source":"app.ts","name":null,"original":{"line":29,"column":30},"generated":{"line":177,"column":26}},{"source":"app.ts","name":null,"original":{"line":29,"column":22},"generated":{"line":177,"column":27}},{"source":"app.ts","name":null,"original":{"line":29,"column":32},"generated":{"line":177,"column":28}},{"source":"app.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":177,"column":32}},{"source":"app.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":178,"column":0}},{"source":"app.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":178,"column":10}},{"source":"app.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":178,"column":18}},{"source":"app.ts","name":null,"original":{"line":30,"column":17},"generated":{"line":178,"column":19}},{"source":"app.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":178,"column":24}},{"source":"app.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":178,"column":25}},{"source":"app.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":178,"column":55}},{"source":"app.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":178,"column":61}},{"source":"app.ts","name":null,"original":{"line":30,"column":53},"generated":{"line":178,"column":62}},{"source":"app.ts","name":null,"original":{"line":30,"column":23},"generated":{"line":178,"column":67}},{"source":"app.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":178,"column":68}},{"source":"app.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":185,"column":0}},{"source":"app.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":185,"column":10}},{"source":"app.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":185,"column":18}},{"source":"app.ts","name":null,"original":{"line":33,"column":17},"generated":{"line":185,"column":19}},{"source":"app.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":185,"column":24}},{"source":"app.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":185,"column":25}},{"source":"app.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":185,"column":60}},{"source":"app.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":185,"column":66}},{"source":"app.ts","name":null,"original":{"line":33,"column":58},"generated":{"line":185,"column":67}},{"source":"app.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":185,"column":70}},{"source":"app.ts","name":null,"original":{"line":33,"column":59},"generated":{"line":185,"column":72}},{"source":"app.ts","name":null,"original":{"line":33,"column":23},"generated":{"line":185,"column":75}},{"source":"app.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":185,"column":76}},{"source":"app.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":197,"column":0}},{"source":"app.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":199,"column":0}},{"source":"app.ts","name":null,"original":{"line":37,"column":4},"generated":{"line":199,"column":4}}],"sources":{"app.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst ort = require('onnxruntime-web');\n\n// use an async context to call onnxruntime functions.\nasync function main() {\n    try {\n        // create a new session and load the specific model.\n        //\n        // the model in this example contains a single MatMul node\n        // it has 2 inputs: 'a'(float32, 3x4) and 'b'(float32, 4x3)\n        // it has 1 output: 'c'(float32, 3x3)\n        const session = await ort.InferenceSession.create('./model.onnx');\n\n        // prepare inputs. a tensor need its corresponding TypedArray as data\n        const dataA = Float32Array.from([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n        const dataB = Float32Array.from([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]);\n        const tensorA = new ort.Tensor('float32', dataA, [3, 4]);\n        const tensorB = new ort.Tensor('float32', dataB, [4, 3]);\n\n        // prepare feeds. use model input names as keys.\n        const feeds = { a: tensorA, b: tensorB };\n\n        // feed inputs and run\n        const results = await session.run(feeds);\n\n        // read from results\n        const dataC = results.c.data;\n        document.write(`data of result tensor 'c': ${dataC}`);\n\n    } catch (e) {\n        document.write(`failed to inference ONNX model: ${e}.`);\n    }\n}\n\nmain();"},"lineCount":null}},"error":null,"hash":"7c337fc97f030049cf60698f655b7be6","cacheData":{"env":{}}}